# Task ID: 5
# Title: Deploy WebApplicationStack with ECS cluster infrastructure
# Status: pending
# Dependencies: 4
# Priority: medium
# Description: Create and deploy ECS cluster with appropriate capacity providers, auto-scaling, and VPC integration to support TrialFinderV2Stack services.
# Details:
1. Deploy WebApplicationStack using CDK:
   - Execute 'cdk deploy WebApplicationStack' using to-dev-admin profile
   - Create ECS cluster with appropriate naming convention (dev-web-app-cluster-ue2)
   - Configure cluster with EC2 and Fargate capacity providers for flexible workload placement
   - Set up cluster auto-scaling policies for cost optimization and performance
   - Integrate cluster with shared VPC infrastructure from EnvironmentBaseStack

2. Cluster Configuration:
   - Enable cluster auto-scaling with target utilization thresholds
   - Configure capacity providers with managed scaling enabled
   - Set up appropriate IAM roles for cluster operations and task execution
   - Ensure cluster is deployed in private subnets for security
   - Configure cluster tags for resource management and cost allocation

3. Infrastructure Validation:
   - Verify cluster creation using 'aws ecs describe-clusters' CLI command
   - Document cluster ARN for reference by TrialFinderV2Stack services
   - Confirm capacity providers are properly registered and active
   - Validate cluster networking connectivity within VPC
   - Prepare cluster for Container Insights enablement in subsequent tasks

# Test Strategy:
1. Verify successful CDK deployment by checking AWS CloudFormation console for WebApplicationStack completion status
2. Validate ECS cluster creation using 'aws ecs describe-clusters --clusters <cluster-name>' to confirm cluster is active
3. Test capacity providers are properly configured using 'aws ecs describe-capacity-providers'
4. Confirm cluster networking by verifying it's deployed in correct VPC and subnets
5. Validate auto-scaling configuration is active and properly configured
6. Document cluster ARN and verify it can be referenced by dependent services
7. Test cluster readiness by attempting to run a simple task definition to ensure infrastructure is functional

AWSTemplateFormatVersion: '2010-09-09'
Description: 'Setup GitHub OIDC provider and IAM roles for GitHub Actions deployments'

Parameters:
  GitHubOrg:
    Type: String
    Default: Third-Opinion
    Description: GitHub organization name
  
  GitHubRepo:
    Type: String
    Default: AppInfraCdkV1
    Description: GitHub repository name

Resources:
  # GitHub OIDC Provider (only needs to be created once per AWS account)
  GitHubOIDCProvider:
    Type: AWS::IAM::OIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - 6938fd4d98bab03faadb97b34396831e3780aea1
        - 1c58a3a8518e8759bf075b76b750d4f2df264fcd

  # Development Account Role
  GitHubActionsDevDeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: github-actions-dev-deploy
      Description: Role for GitHub Actions to deploy to development environment
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOIDCProvider
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                'token.actions.githubusercontent.com:aud': sts.amazonaws.com
              StringLike:
                'token.actions.githubusercontent.com:sub':
                  - !Sub 'repo:${GitHubOrg}/${GitHubRepo}:ref:refs/heads/develop'
                  - !Sub 'repo:${GitHubOrg}/${GitHubRepo}:ref:refs/heads/development'
                  - !Sub 'repo:${GitHubOrg}/${GitHubRepo}:ref:refs/heads/feature/*'
                  - !Sub 'repo:${GitHubOrg}/${GitHubRepo}:pull_request'
      ManagedPolicyArns:
        - !Ref CDKDeployPolicy
      Tags:
        - Key: Purpose
          Value: GitHubActionsDeployment
        - Key: Environment
          Value: Development

  # Production Account Role (Note: This should be deployed in the production account)
  # Keeping it here for reference, but it needs to be deployed separately
  GitHubActionsProdDeployRole:
    Type: AWS::IAM::Role
    Condition: IsProductionAccount
    Properties:
      RoleName: github-actions-prod-deploy
      Description: Role for GitHub Actions to deploy to production environment
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOIDCProvider
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                'token.actions.githubusercontent.com:aud': sts.amazonaws.com
              StringLike:
                'token.actions.githubusercontent.com:sub':
                  - !Sub 'repo:${GitHubOrg}/${GitHubRepo}:ref:refs/heads/master'
                  - !Sub 'repo:${GitHubOrg}/${GitHubRepo}:ref:refs/heads/main'
      ManagedPolicyArns:
        - !Ref CDKDeployPolicy
      Tags:
        - Key: Purpose
          Value: GitHubActionsDeployment
        - Key: Environment
          Value: Production

  # CDK Deploy Policy (using the compact version we created earlier)
  CDKDeployPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: github-actions-cdk-deploy-policy
      Description: Policy for GitHub Actions to deploy CDK applications
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: CDKBootstrapAndMetadata
            Effect: Allow
            Action:
              - cloudformation:*
              - ssm:GetParameter
              - ssm:PutParameter
              - ssm:DeleteParameter
              - ssm:DescribeParameters
            Resource:
              - !Sub 'arn:aws:cloudformation:*:${AWS::AccountId}:stack/CDKToolkit/*'
              - !Sub 'arn:aws:cloudformation:*:${AWS::AccountId}:stack/dev-*'
              - !Sub 'arn:aws:cloudformation:*:${AWS::AccountId}:stack/qa-*'
              - !Sub 'arn:aws:cloudformation:*:${AWS::AccountId}:stack/int-*'
              - !Sub 'arn:aws:cloudformation:*:${AWS::AccountId}:stack/stg-*'
              - !Sub 'arn:aws:cloudformation:*:${AWS::AccountId}:stack/prod-*'
              - !Sub 'arn:aws:ssm:*:${AWS::AccountId}:parameter/cdk-bootstrap/*'
              - !Sub 'arn:aws:ssm:*:${AWS::AccountId}:parameter/*'
          
          - Sid: S3ForCDKAssets
            Effect: Allow
            Action:
              - s3:*
            Resource:
              - 'arn:aws:s3:::cdk-*'
              - 'arn:aws:s3:::thirdopinion.io-*'
              - 'arn:aws:s3:::dev-*'
              - 'arn:aws:s3:::qa-*'
              - 'arn:aws:s3:::int-*'
              - 'arn:aws:s3:::stg-*'
              - 'arn:aws:s3:::prod-*'
          
          - Sid: ECRServices
            Effect: Allow
            Action:
              - ecr:*
            Resource: '*'
          
          - Sid: CoreServices
            Effect: Allow
            Action:
              - ec2:*
              - autoscaling:*
              - elasticloadbalancing:*
              - ecs:*
              - lambda:*
              - states:*
              - rds:*
              - dynamodb:*
              - elasticache:*
              - apigateway:*
              - cloudfront:*
              - route53:*
              - sqs:*
              - sns:*
              - events:*
              - logs:*
              - cloudwatch:*
              - xray:*
              - cognito-idp:*
              - cognito-identity:*
              - ses:*
              - amplify:*
              - bedrock:*
              - sagemaker:*
            Resource: '*'
          
          - Sid: SecretsManagerTaggedAccess
            Effect: Allow
            Action:
              - secretsmanager:*
            Resource: '*'
            Condition:
              StringEquals:
                'secretsmanager:ResourceTag/CDKManaged': 'true'
          
          - Sid: SecretsManagerCreateTagged
            Effect: Allow
            Action:
              - secretsmanager:CreateSecret
              - secretsmanager:TagResource
            Resource: '*'
            Condition:
              StringEquals:
                'aws:RequestTag/CDKManaged': 'true'
          
          - Sid: IAMRoleManagement
            Effect: Allow
            Action:
              - iam:CreateRole
              - iam:DeleteRole
              - iam:UpdateRole
              - iam:AttachRolePolicy
              - iam:DetachRolePolicy
              - iam:PutRolePolicy
              - iam:DeleteRolePolicy
              - iam:TagRole
              - iam:UntagRole
              - iam:PassRole
              - iam:CreateServiceLinkedRole
              - iam:GetRole
              - iam:GetRolePolicy
              - iam:ListRolePolicies
              - iam:ListAttachedRolePolicies
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/cdk-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/dev-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/qa-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/int-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/stg-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/prod-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/aws-service-role/*'
          
          - Sid: ReadOnlyAccess
            Effect: Allow
            Action:
              - kms:DescribeKey
              - kms:ListAliases
              - acm:ListCertificates
              - acm:DescribeCertificate
              - sts:AssumeRole
              - tag:TagResources
              - tag:UntagResources
              - tag:GetResources
            Resource: '*'

Conditions:
  IsProductionAccount: !Equals [!Ref AWS::AccountId, '442042533707']

Outputs:
  GitHubOIDCProviderArn:
    Description: ARN of the GitHub OIDC Provider
    Value: !Ref GitHubOIDCProvider
    Export:
      Name: !Sub '${AWS::StackName}-GitHubOIDCProviderArn'
  
  DevDeployRoleArn:
    Description: ARN of the GitHub Actions deployment role for development
    Value: !GetAtt GitHubActionsDevDeployRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-DevDeployRoleArn'
  
  ProdDeployRoleArn:
    Condition: IsProductionAccount
    Description: ARN of the GitHub Actions deployment role for production
    Value: !GetAtt GitHubActionsProdDeployRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-ProdDeployRoleArn'